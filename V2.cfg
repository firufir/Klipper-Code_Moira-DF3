### Update from V1. Calibration error has been addressed.
### Printer currently underextruding. Check [extruder] rotating_distance if value correspond to extrusion of about 100mm filament. If not, adjust value.
### In case underextrusion not solved still, check filament flow value on Cura.
### z_offset value for Moira DF3 (original probe) not confirmed. Play around with value until sweet spot is hit.

# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication/USART.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

######################################################################
                   #  INCLUDE
######################################################################
######################################################################

[include mainsail.cfg]

[virtual_sdcard]
path: ~/printer_data/gcodes

[display_status]

######################################################################
######################################################################
                  #  STEPPER HEATER / MOTOR
######################################################################
######################################################################

[stepper_a]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 32
endstop_pin: ^!PC0
homing_speed: 20
position_endstop: 202.048007
arm_length: 186.155918

[tmc2209 stepper_a]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.35
hold_current: 0.35
stealthchop_threshold: 0 #99999

[stepper_b]
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 32
endstop_pin: ^!PC1

[tmc2209 stepper_b]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.35
hold_current: 0.35
stealthchop_threshold: 0 #99999

[stepper_c]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 32
endstop_pin: ^!PC2

[tmc2209 stepper_c]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.35
hold_current: 0.35
stealthchop_threshold: 0 #99999

######################################################################
######################################################################
                  #  EXTRUDER HEATER / MOTOR
######################################################################
######################################################################

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1 
microsteps: 16
rotation_distance: 33.5 
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: Generic 3950   #EPCOS 100K B57560G104F
sensor_pin: PA0
control: pid
pid_Kp: 22.219
pid_Ki: 0.920
pid_Kd: 134.148
min_temp: 5
max_temp: 280

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.4
hold_current: 0.3
stealthchop_threshold: 0 #5

######################################################################
######################################################################
                  #  FAN
######################################################################
######################################################################

[heater_fan nozzle_cooling_fan]
pin: PB15

[heater_fan extruder]
pin: PC6
kick_start_time: 0.500
heater: extruder
heater_temp: 50.0

[controller_fan mainboard_fan]
pin: PC7
max_power: 1
cycle_time: 0.01
kick_start_time:0.2
fan_speed: 0.6
heater: extruder

######################################################################
######################################################################
                  #  MCU
######################################################################
######################################################################

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_49000B0011504B5735313920-if00

######################################################################
######################################################################
                  #  TEMPERATURE-SENSORS
######################################################################
######################################################################

[temperature_sensor Raspberry_Pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 80

[temperature_sensor MCU]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 80

######################################################################
######################################################################
                  #  PRINTER SETTINGS
######################################################################
######################################################################

[printer]
kinematics: delta
max_velocity: 300
max_accel: 1200
max_z_velocity: 60
max_z_accel: 100
delta_radius: 75

######################################################################
######################################################################
                  #  CALIBRATE/PROBE
######################################################################
######################################################################

[probe]
pin: ^!PC14
z_offset: -1.000

[delta_calibrate] ### For manual delta probe calibration
radius: 75
speed: 120
horizontal_move_z: 20

######################################################################
######################################################################
                  #  BED LEVELLING
######################################################################
######################################################################

[bed_mesh] ### For auto delta probe calibration
speed: 120
horizontal_move_z: 20
mesh_radius: 50
mesh_origin: 0, 0
round_probe_count: 5

######################################################################
######################################################################
                   #  BOARD-PINS
######################################################################
######################################################################

[board_pins]
aliases:
    # EXP1 header
  EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
  EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

######################################################################
######################################################################
                    #   Macros
######################################################################
######################################################################

[gcode_macro LOAD_FILAMENT]
gcode:
  M83
  G1 E50 F1800
  G1 E30 F300
  G1 E20 F60
  M82

[gcode_macro UNLOAD_FILAMENT]
gcode:
  M83
  G1 E10 F300
  G1 E-50 F1800
  G1 E-50 F300
  M82

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
### Read extrude from _TOOLHEAD_PARK_PAUSE_CANCEL macro
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
### Get VELOCITY parameter if specified
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
### End of definitions
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  
  RESUME_BASE {get_params}
  
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
### Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}

  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G28

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper; park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
### Set park positon for x and y
### Default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_park = printer.toolhead.axis_maximum.y %}
  {% set z_park_delta = 2.0 %}
### Calculate save lift position
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
### End of definitions
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
  {% if printer["gcode_macro status_ready"] != null %}
    status_ready
  {% endif %}\
  
### Macro M600 & M900 removed.
### M600: Initiate filament change procedure within printing procedure.
### M900: ?

######################################################################
######################################################################
                   ###   KNÃ–PFE  ###
######################################################################
######################################################################

### Study more the entries of this subtopic
[gcode_macro _buttonBlocker]
variable_init: 0
gcode:

[delayed_gcode init_gcodeButtons]
initial_duration: 2.
gcode:
   SET_GCODE_VARIABLE MACRO=_buttonBlocker VARIABLE=init VALUE=1

[gcode_button play]
pin: ^!PC13
press_gcode:
   {% if printer["gcode_macro _buttonBlocker"].init %}
      { action_respond_info("Button 'Resume/Pause' pressed.") }
      {% if printer.idle_timeout.state == "Printing" %}
         PAUSE
      { action_respond_info("Button 'PAUSE' pressed.") }
         {% else %}
      { action_respond_info("Button 'Resume' pressed.") }
         RESUME
      {% endif %}
   {% endif %}
release_gcode:

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  3.588984, 3.588984, 3.588984, 3.588984, 3.588984
#*# 	  2.697949, 2.697949, 2.547637, 2.797949, 2.797949
#*# 	  3.113763, 2.186277, 1.918007, 2.276277, 3.303763
#*# 	  2.345335, 2.345335, 2.045046, 2.455335, 2.455335
#*# 	  3.027939, 3.027939, 3.027939, 3.027939, 3.027939
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = -49.99
#*# max_x = 49.99
#*# min_y = -50.01
#*# max_y = 50.0
